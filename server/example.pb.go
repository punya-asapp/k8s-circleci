// Code generated by protoc-gen-go. DO NOT EDIT.
// source: example.proto

package main

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type AveragePriceRequest struct {
	Instrument           string   `protobuf:"bytes,1,opt,name=instrument,proto3" json:"instrument,omitempty"`
	NumPoints            uint32   `protobuf:"varint,2,opt,name=num_points,json=numPoints,proto3" json:"num_points,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AveragePriceRequest) Reset()         { *m = AveragePriceRequest{} }
func (m *AveragePriceRequest) String() string { return proto.CompactTextString(m) }
func (*AveragePriceRequest) ProtoMessage()    {}
func (*AveragePriceRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_15a1dc8d40dadaa6, []int{0}
}

func (m *AveragePriceRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AveragePriceRequest.Unmarshal(m, b)
}
func (m *AveragePriceRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AveragePriceRequest.Marshal(b, m, deterministic)
}
func (m *AveragePriceRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AveragePriceRequest.Merge(m, src)
}
func (m *AveragePriceRequest) XXX_Size() int {
	return xxx_messageInfo_AveragePriceRequest.Size(m)
}
func (m *AveragePriceRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_AveragePriceRequest.DiscardUnknown(m)
}

var xxx_messageInfo_AveragePriceRequest proto.InternalMessageInfo

func (m *AveragePriceRequest) GetInstrument() string {
	if m != nil {
		return m.Instrument
	}
	return ""
}

func (m *AveragePriceRequest) GetNumPoints() uint32 {
	if m != nil {
		return m.NumPoints
	}
	return 0
}

type AveragePriceResponse struct {
	AveragePrice         float32  `protobuf:"fixed32,1,opt,name=average_price,json=averagePrice,proto3" json:"average_price,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AveragePriceResponse) Reset()         { *m = AveragePriceResponse{} }
func (m *AveragePriceResponse) String() string { return proto.CompactTextString(m) }
func (*AveragePriceResponse) ProtoMessage()    {}
func (*AveragePriceResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_15a1dc8d40dadaa6, []int{1}
}

func (m *AveragePriceResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AveragePriceResponse.Unmarshal(m, b)
}
func (m *AveragePriceResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AveragePriceResponse.Marshal(b, m, deterministic)
}
func (m *AveragePriceResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AveragePriceResponse.Merge(m, src)
}
func (m *AveragePriceResponse) XXX_Size() int {
	return xxx_messageInfo_AveragePriceResponse.Size(m)
}
func (m *AveragePriceResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_AveragePriceResponse.DiscardUnknown(m)
}

var xxx_messageInfo_AveragePriceResponse proto.InternalMessageInfo

func (m *AveragePriceResponse) GetAveragePrice() float32 {
	if m != nil {
		return m.AveragePrice
	}
	return 0
}

func init() {
	proto.RegisterType((*AveragePriceRequest)(nil), "AveragePriceRequest")
	proto.RegisterType((*AveragePriceResponse)(nil), "AveragePriceResponse")
}

func init() { proto.RegisterFile("example.proto", fileDescriptor_15a1dc8d40dadaa6) }

var fileDescriptor_15a1dc8d40dadaa6 = []byte{
	// 189 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x4d, 0xad, 0x48, 0xcc,
	0x2d, 0xc8, 0x49, 0xd5, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x57, 0x0a, 0xe1, 0x12, 0x76, 0x2c, 0x4b,
	0x2d, 0x4a, 0x4c, 0x4f, 0x0d, 0x28, 0xca, 0x4c, 0x4e, 0x0d, 0x4a, 0x2d, 0x2c, 0x4d, 0x2d, 0x2e,
	0x11, 0x92, 0xe3, 0xe2, 0xca, 0xcc, 0x2b, 0x2e, 0x29, 0x2a, 0xcd, 0x4d, 0xcd, 0x2b, 0x91, 0x60,
	0x54, 0x60, 0xd4, 0xe0, 0x0c, 0x42, 0x12, 0x11, 0x92, 0xe5, 0xe2, 0xca, 0x2b, 0xcd, 0x8d, 0x2f,
	0xc8, 0xcf, 0xcc, 0x2b, 0x29, 0x96, 0x60, 0x52, 0x60, 0xd4, 0xe0, 0x0d, 0xe2, 0xcc, 0x2b, 0xcd,
	0x0d, 0x00, 0x0b, 0x28, 0x59, 0x73, 0x89, 0xa0, 0x9a, 0x5a, 0x5c, 0x90, 0x9f, 0x57, 0x9c, 0x2a,
	0xa4, 0xcc, 0xc5, 0x9b, 0x08, 0x11, 0x8f, 0x2f, 0x00, 0x49, 0x80, 0x4d, 0x66, 0x0a, 0xe2, 0x49,
	0x44, 0x52, 0x6c, 0xe4, 0xc9, 0xc5, 0x15, 0x5c, 0x9a, 0x9b, 0x9b, 0x58, 0x94, 0x59, 0x95, 0x5a,
	0x24, 0x64, 0xcd, 0xc5, 0x83, 0x6c, 0x94, 0x90, 0x88, 0x1e, 0x16, 0xf7, 0x4a, 0x89, 0xea, 0x61,
	0xb3, 0xcf, 0x89, 0x2d, 0x8a, 0x25, 0x37, 0x31, 0x33, 0x2f, 0x89, 0x0d, 0xec, 0x59, 0x63, 0x40,
	0x00, 0x00, 0x00, 0xff, 0xff, 0xa3, 0x30, 0x5c, 0xaf, 0xfd, 0x00, 0x00, 0x00,
}
