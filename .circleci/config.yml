version: 2

jobs:
  build:
    docker:
      - image: circleci/golang
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Set up K3d
          command: |
            wget -q -O - https://raw.githubusercontent.com/rancher/k3d/master/install.sh | bash
            k3d create --wait 0

            cp $(k3d get-kubeconfig) ./kubectl/kubeconfig
            docker build -t kubectl kubectl

      - run:
          name: Build and run server
          command: |
            # Note that we need to set the tag to something other than 'latest'
            # so that the ImagePullPolicy is set to Never. This is important
            # because we're relying on a local image.

            # Build the image locally (i.e. in the remote Docker environment)
            docker build -t server:pinned server

            # Make the image available to K8s
            k3d import-images server:pinned

            # Use Docker to invoke kubectl, which will create K8s resources
            # that reference this image.
            docker run --network host -it --rm kubectl run server --image=server:pinned --port=8080 --expose

      - run:
          name: Build and run integration tests
          command: |
            docker build -t integration:pinned integration
            k3d import-images integration:pinned
            docker run --network host -it --rm kubectl run integration --rm --attach --restart=Never --image=integration:pinned
